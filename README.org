#+OPTIONS: ^:nil
* Inbox
** maak generiek @teidoc
** maak subsets per taal @corpus
- met bijbehorende word-counts &c
** vergelijk Nederlab (www.nederlab.nl)
- zoekfunctie (levenshtein d, expansie)
* Docere
- Generieke document viewer
- O.a. Gekaapte Brieven
* Bijzonderheden
- annotatie op basis van een @key
- noten
- text layers
- facsimiles (± 60Gb)
* TODO
- [ ] Maak het sneller!
  + [ ] Bottleneck is Sentence Boundary Detection / Spacy in general
- [X] Inspiratie: zoek tools met voorbeelden van tekst-statistieken
- [ ] belangrijke termen met tf-idf
- [ ] frog tagger → beter dan spacy voor Nederlands
- [X] word count/avg wordcount
- [X] sentence length/avg sentence length
- [ ] sentiment analysis over time
- [ ] Topic modelling
- [ ] measures of complexity,
- [ ] words with relatively high term frequency (tf-idf)
- [ ] n-grams
- [ ] transformeer de xml naar json/dict met relevante informatie
** DONE Preprocessing
*** DONE Language recognition
- langdetect
*** XML
- [X] lxml
- [-] text layers
- [ ] generic
*** Tokenizing & Tagging
- Spacy
- Serializing
** Scikit-learn
*** decomposition
- NMF
- LatentDirichletAllocation
- TruncatedSVD
*** feature_extraction
- CountVectorizer
*** examples
#+BEGIN_SRC python
    vectorizer = CountVectorizer(min_df=5, max_df=0.9, stop_words='english', lowercase=True, token_pattern='[a-zA-Z\-][a-zA-Z\-]{2,}')
    data_vectorized = vectorizer.fit_transform(wines["processed_description"])

    lda = LatentDirichletAllocation(n_components=NUM_TOPICS, max_iter=10, learning_method='online',verbose=True)
    data_lda = lda.fit_transform(data_vectorized)

    bivectorizer = CountVectorizer(min_df=5, max_df=0.9, stop_words='english', lowercase=True, ngram_range=(1,2))
    bigram_vectorized = bivectorizer.fit_transform(wines["processed_description"])
#+END_SRC
* XML
** Tei contains:
- *letters* (let***.xml) and *related documents* (RM***.xml),
- letter-level metadata (title, number, date, correspondents,
etc.),
- full transcription,
- translation, the notes,
- textual notes,
- information that connects transcribed pages with images of those pages
  (facsimile elements).
** NB script alters the tree
- werkt het nog met etree.tostring()?
