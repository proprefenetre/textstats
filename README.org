#+OPTIONS: ^:nil
* Inbox
** VRE Service:
*** curl -X POST -d @let001.xml -H 'Content-Type: application/xml' http://localhost:5000
*** Wat
- voorlopig 1 bestand tegelijk
- webserver
- bestand komt binnen met een POST
- JSON d'r uit
*** Hoe
- Dockerimage hosten op knaw dockerhub
- github <-> dockerhub
*** To do
- XPaths doorgeven aan Bas waarmee hij kan verifieren of een bestand TEI is
- productie-webserver?
** curl
- curl -X POST -d @data/letters/let001.xml http://localhost:5000/as_text :: form
- curl -X POST -d @data/letters/let001.xml -H 'Content-Type: application/xml' http://localhost:5000 :: data
- curl -X POST -d @data/letters/let001.xml -H 'application/xml' http://localhost:5000 :: form
- curl -X POST -d @data/letters/let001.xml -H 'text/xml' http://localhost:5000 :: data
  - xml before an '=' is interpreted as key, stuff after a value


** BEZIG maak TeiDoc generiek
** maak subsets per taal @corpus
- met bijbehorende word-counts &c
** vergelijk Nederlab (www.nederlab.nl)
- zoekfunctie (levenshtein d, expansie)
** DONE TEI: namespace map
#+BEGIN_SRC python
self.nsmap = tree.nsmap()  # pseudo
for k, v in self.nsmap.items():
    if k is None:
        self.nsmap['tei'] = v
        self.nsmap.remove_key(None)  # pseudo
#+END_SRC
** NB frog tagger → beter dan spacy voor Nederlands

* Docere
- Generieke document viewer
- O.a. Gekaapte Brieven
* Bijzonderheden
- annotatie op basis van een @key
- noten
- text layers
- facsimiles (± 60Gb)
- unicode entities:
  - "\u00a0": " ", # NO-BREAK SPACE
  - "\u00a3": "",  # POUND SIGN
  - "\u00b0": "",  # DEGREE SIGN
  - "\u00b1": "",  # PLUS-MINUS SIGN
  - "\u00b4": "",  # ACUTE ACCENT
  - "\u00b7": "",  # MIDDLE DOT
  - "\u00bb": "",  # RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK
  - "\u00bd": "",  # VULGAR FRACTION ONE HALF
  - "\u2013": "",  # EN DASH
  - "\u2014": "",  # EM DASH
  - "\u2018": "",  # LEFT SINGLE QUOTATION MARK
  - "\u201c": "",  # LEFT DOUBLE QUOTATION MARK
  - "\u201d": "",  # RIGHT DOUBLE QUOTATION MARK
  - "\u2026": "",  # HORIZONTAL ELLIPSIS
  - "\u2500": "",  # BOX DRAWINGS LIGHT HORIZONTAL
  - "\u25a1": "",  # WHITE SQUARE
  - "\u2019": "'", # RIGHT SINGLE QUOTATION MARK
  - "&": "en",
  - r"\s+": " ",
  - "-": "",
  - "_": "",
  - "t'": "t",
  - "d'": "de ",
  - "'t": "het",
  - "/": ",",
* TODO
- [ ] Maak het sneller!
  + [ ] Bottlenecks
    + is Sentence Boundary Detection / Spacy in general
    + language detection
- [X] Inspiratie: zoek tools met voorbeelden van tekst-statistieken
- [ ] belangrijke termen met tf-idf
- [X] word count/avg wordcount
- [X] sentence length/avg sentence length
- [ ] sentiment analysis over time
- [ ] Topic modelling
- [X] measures of complexity,
- [ ] words with relatively high term frequency (tf-idf)
- [X] n-grams
- [X] transformeer de xml naar json/dict met relevante informatie
** BEZIG Preprocessing
*** NB Textacy
*** DONE Language recognition
- langdetect
*** BEZIG XML
- [X] lxml
- [X] text layers
- [-] generic
*** DONE Tokenizing & Tagging
- Spacy
** Scikit-learn
*** decomposition
- NMF
- LatentDirichletAllocation
- TruncatedSVD
*** feature_extraction
- CountVectorizer
*** examples
#+BEGIN_SRC python
    vectorizer = CountVectorizer(min_df=5, max_df=0.9, stop_words='english', lowercase=True, token_pattern='[a-zA-Z\-][a-zA-Z\-]{2,}')
    data_vectorized = vectorizer.fit_transform(wines["processed_description"])

    lda = LatentDirichletAllocation(n_components=NUM_TOPICS, max_iter=10, learning_method='online',verbose=True)
    data_lda = lda.fit_transform(data_vectorized)

    bivectorizer = CountVectorizer(min_df=5, max_df=0.9, stop_words='english', lowercase=True, ngram_range=(1,2))
    bigram_vectorized = bivectorizer.fit_transform(wines["processed_description"])
#+END_SRC
* XML
** Tei contains:
- *letters* (let***.xml) and *related documents* (RM***.xml),
- letter-level metadata (title, number, date, correspondents,
etc.),
- full transcription,
- translation, the notes,
- textual notes,
- information that connects transcribed pages with images of those pages
  (facsimile elements).
** NB script alters the tree
- werkt het nog met etree.tostring()?
-
